package com.ptit.exam.ui.view.admin;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.ptit.exam.persistence.entity.Answer;
import com.ptit.exam.persistence.entity.Question;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.List;

/**
 * User: thuongntt
 * Date: 12/5/13
 * Time: 2:07 AM
 */
public class QuestionPanel extends JPanel
{
    private JPanel questionPanel;
    private JTextArea txtQuestion;
    private JTextArea txtAnswer1;
    private JTextArea txtAnswer2;
    private JTextArea txtAnswer3;
    private JTextArea txtAnswer4;
    private JLabel lbImage;

    public QuestionPanel(Question question)
    {
        txtQuestion.setText(question.getContent());

        if (null != question.getUrlImage())
        {
            try
            {
                BufferedImage questionImage = ImageIO.read(new File(question.getUrlImage()));
                ImageIcon imageIcon = new ImageIcon(questionImage);
                Image image = imageIcon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
                lbImage.setIcon(new ImageIcon(image));
                lbImage.setVisible(true);
            }
            catch (IOException e1)
            {
                lbImage.setVisible(false);
            }
        }

        List<Answer> answerList = question.getAnswerList();
        txtAnswer1.setText(answerList.get(0).getContent());
        txtAnswer2.setText(answerList.get(1).getContent());
        txtAnswer3.setText(answerList.get(2).getContent());
        txtAnswer4.setText(answerList.get(3).getContent());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()
    {
        questionPanel = new JPanel();
        questionPanel.setLayout(new GridLayoutManager(5, 3, new Insets(0, 0, 0, 0), -1, -1));
        txtQuestion = new JTextArea();
        txtQuestion.setText("");
        questionPanel.add(txtQuestion, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(300, 150), new Dimension(300, 150), new Dimension(300, 150), 0, false));
        txtAnswer1 = new JTextArea();
        questionPanel.add(txtAnswer1, new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(450, 30), new Dimension(450, 30), new Dimension(450, 30), 0, false));
        txtAnswer2 = new JTextArea();
        questionPanel.add(txtAnswer2, new GridConstraints(2, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(450, 30), new Dimension(450, 30), new Dimension(450, 30), 0, false));
        txtAnswer3 = new JTextArea();
        questionPanel.add(txtAnswer3, new GridConstraints(3, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(450, 30), new Dimension(450, 30), new Dimension(450, 30), 0, false));
        txtAnswer4 = new JTextArea();
        questionPanel.add(txtAnswer4, new GridConstraints(4, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(450, 30), new Dimension(450, 30), new Dimension(450, 30), 0, false));
        lbImage = new JLabel();
        lbImage.setText("");
        questionPanel.add(lbImage, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, 150), new Dimension(150, 150), new Dimension(150, 150), 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("A.");
        questionPanel.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("B.");
        questionPanel.add(label2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("C.");
        questionPanel.add(label3, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("D.");
        questionPanel.add(label4, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$()
    {
        return questionPanel;
    }
}
